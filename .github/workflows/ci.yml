name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CI_REGISTRY: ''
  CI_IMAGE_NAME: liyinlin/game2048
  CI_WALRUS_PROJECT: demo
  CI_WALRUS_ENV: dev
  CI_WALRUS_SERVICE_NAME: game2048
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml
    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.CI_DOCKER_USERNAME }}
        password: ${{ secrets.CI_DOCKER_PASSWORD }}
    - name: Build and push Docker image
      run: |
        docker build . --file Dockerfile --tag ${{ env.CI_IMAGE_NAME }}:${{ github.run_id }}
        docker push ${{ env.CI_IMAGE_NAME }}:${{ github.run_id }}
    - name: Download CLI
      run: |
       # Download walrus CLI
       curl -v -k -o walrus -LO "${{ secrets.CI_WALRUS_SERVER }}/cli?arch=amd64&os=linux"
       chmod +x ./walrus
    - name: Deploy
      run: |
        # Setup CLI config
        ./walrus config setup --server ${{ secrets.CI_WALRUS_SERVER }} --token ${{ secrets.CI_WALRUS_TOKEN }} --project ${{ env.CI_WALRUS_PROJECT }} --environment ${{ env.CI_WALRUS_ENV }}
       
       # Deploy app
       ./walrus service create --debug --name ${{ env.CI_WALRUS_SERVICE_NAME }} --template '{"name": "webservice", "version": "0.0.4"}' --attributes '{"image": "${{ env.CI_IMAGE_NAME }}:${{ github.run_id }}", "ports": ["8080"]}'
