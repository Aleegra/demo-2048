stages:
  - compile
  - build
  - deploy

compile:
  stage: compile
  image: maven:3-openjdk-8
  artifacts:
    paths:
      - target/
  script:
    - mvn clean package

build:
  dependencies:
  - compile
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  artifacts:
    paths:
      - target/
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$(printf "%s:%s" "${DOCKERHUB_USERNAME}" "${DOCKERHUB_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "liyinlin/game2048:${CI_COMMIT_SHORT_SHA}"


deploy:
  stage: deploy
  image: liyinlin/kubetoolbox:iac
  script:
    - walrus config setup -s ${WALRUS_URL} --insecure --token ${WALRUS_API_TOKEN} -p ${WALRUS_PROJECT} -e ${WALRUS_PROJECT_ENV}
    - >-
      walrus service create 
      --name ${WALRUS_SERVICE_NAME}
      --template '{"id": "webservice", "version": "0.0.4"}' 
      --attributes '{"image": "liyinlin/game2048:'${CI_COMMIT_SHORT_SHA}'", "ports": ["8080"]}'
#    - >-
#      curl --insecure -LSs -X POST -H 'Accept: application/json' -H 'Content-Type: application/json'
#      -u ${RANCHER_TOKEN} ${RANCHER_URL}/v3/clusters/${RANCHER_CLUSTER_ID}?action=generateKubeconfig
#      | jq -r .config > ~/.kube/config 
#    - sed -i "s/\$tag/${CI_COMMIT_SHORT_SHA}/g" manifests/deployment.yaml
#    - kubectl apply -f manifests/
